events {
    worker_connections 1024;
}

http {
    # Generate unique request ID
    map $request_id $request_id {
        default $request_id;
        "" $http_x_request_id;
    }
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
    
    # Upstream backend servers
    upstream backend_servers {
        # Load balancing method: round-robin (default)
        # Other options: least_conn, ip_hash, hash
        
        # Backend server instances (using Docker service names)
        server backend-1:5000 weight=1 max_fails=3 fail_timeout=30s;
        server backend-2:5000 weight=1 max_fails=3 fail_timeout=30s;
        server backend-3:5000 weight=1 max_fails=3 fail_timeout=30s;
        server backend-4:5000 weight=1 max_fails=3 fail_timeout=30s;
        
        # Health check
        keepalive 32;
    }
    
    # Upstream for Socket.IO (sticky sessions)
    upstream socket_servers {
        ip_hash; # Ensures same client goes to same server for WebSocket
        
        server backend-1:5000;
        server backend-2:5000;
        server backend-3:5000;
        server backend-4:5000;
        
        keepalive 32;
    }
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Main server block
    server {
        listen 80;
        server_name localhost;
        
        # Enable real IP forwarding for load balancer
        real_ip_header X-Forwarded-For;
        set_real_ip_from 0.0.0.0/0;
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
        
        # Client max body size
        client_max_body_size 10M;
        
        # API routes with rate limiting
        location /api/ {
            # Rate limiting
            limit_req zone=api burst=20 nodelay;
            
            # Proxy settings
            proxy_pass http://backend_servers;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Instance-ID $upstream_addr;
            proxy_cache_bypass $http_upgrade;
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Health check
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            
            # Load balancer specific headers
            add_header X-Backend-Server $upstream_addr;
            add_header X-Request-ID $request_id;
        }
        
        # Socket.IO routes (sticky sessions)
        location /socket.io/ {
            proxy_pass http://socket_servers;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket specific settings
            proxy_buffering off;
            proxy_cache off;
            
            # Timeouts for WebSocket
            proxy_connect_timeout 7d;
            proxy_send_timeout 7d;
            proxy_read_timeout 7d;
        }
        
        # Health check endpoint
        location /health {
            proxy_pass http://backend_servers/api/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Static files (if serving frontend from same server)
        location / {
            root /var/www/html;
            try_files $uri $uri/ /index.html;
            
            # Cache static assets
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
            }
        }
        
        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}



